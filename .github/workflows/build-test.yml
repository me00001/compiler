name: Build and Tests

on:
  push:
    branches: # all branches
      - "**"
    tags-ignore: # ignore pushing tags
      - "**"
    paths-ignore:
      - "README.md"

  pull_request:
    branches:
      - main
    tags-ignore: # ignore pushing tags
      - "**"
    paths-ignore:
      - "README.md"

  release:
    types: 
      - published

  workflow_dispatch:
    inputs:
      allTests:
        description: "اختبارات كاملة ترجمةً وتنفيذًا؟ (نعم/لا)"
        required: true
        default: "نعم"

env:
  BUILD_TYPE: Release
  BOOST_VER: 1.76.0
  BOOST_LIBS: filesystem program_options system locale date_time regex nowide thread

jobs:
  GCC-Linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache Boost
        uses: actions/cache@v2
        with:
          path: "${{ runner.workspace }}/boost_*.tar.gz"
          key: "boost-${{env.BOOST_VER}}"

      - name: Build Boost
        id: boost
        uses: egor-tensin/build-boost@v1
        with:
          version: ${{env.BOOST_VER}}
          libraries: ${{env.BOOST_LIBS}}
          platform: x64
          configuration: ${{env.BUILD_TYPE}}

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        env:
          BOOST_ROOT: ${{steps.boost.outputs.root}}
          BOOST_LIBRARYDIR: ${{steps.boost.outputs.librarydir}}
        working-directory: ${{github.workspace}}/build
        run: cmake $GITHUB_WORKSPACE

      - name: Build
        working-directory: ${{github.workspace}}/build
        run: |
          cmake --build .
          make
          sudo make install

      - name: Tests Syntax
        env:
          BOOST_ROOT: ${{steps.boost.outputs.root}}
          BOOST_LIBRARYDIR: ${{steps.boost.outputs.librarydir}}
        run: |
          export LD_LIBRARY_PATH=${{env.BOOST_LIBRARYDIR}}:$LD_LIBRARY_PATH
          make tests-syntax

      - name: Tests
        env:
          BOOST_ROOT: ${{steps.boost.outputs.root}}
          BOOST_LIBRARYDIR: ${{steps.boost.outputs.librarydir}}
        if: ${{ github.event_name == 'release' || github.event.inputs.allTests == 'نعم' }}
        run: |
          export LD_LIBRARY_PATH=${{env.BOOST_LIBRARYDIR}}:$LD_LIBRARY_PATH
          make tests

  MinGW-Windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache Boost
        uses: actions/cache@v2
        with:
          path: "${{ runner.workspace }}/boost_*.tar.gz"
          key: "boost-${{env.BOOST_VER}}"

      - name: Build Boost
        id: boost
        uses: egor-tensin/build-boost@v1
        with:
          version: ${{env.BOOST_VER}}
          libraries: ${{env.BOOST_LIBS}}
          platform: x64
          configuration: ${{env.BUILD_TYPE}}
          toolset: mingw
          static: 1
          static-runtime: 1
          directory: ${{github.workspace}}/boost

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        env:
          BOOST_ROOT: ${{steps.boost.outputs.root}}
          BOOST_LIBRARYDIR: ${{steps.boost.outputs.librarydir}}
        working-directory: ${{github.workspace}}/build
        shell: cmd
        run: |
          cmake ${{github.workspace}} -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: cmd
        run: |
          mingw32-make
